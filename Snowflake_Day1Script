USE ROLE SYSADMIN;

CREATE OR REPLACE WAREHOUSE INTERVIEW_WH WITH WAREHOUSE_SIZE = 'XSMALL' 
WAREHOUSE_TYPE = 'STANDARD' AUTO_SUSPEND = 300 AUTO_RESUME = TRUE 
MIN_CLUSTER_COUNT = 1 MAX_CLUSTER_COUNT = 1 SCALING_POLICY = 'STANDARD' COMMENT = 'Northwoods Airline Warehouse';

USE WAREHOUSE INTERVIEW_WH;

CREATE OR REPLACE DATABASE USER_ANBALAGAN
COMMENT = 'Database for Airline Project';

USE DATABASE USER_ANBALAGAN;

CREATE OR REPLACE SCHEMA NORTHWOODS_TABLES
COMMENT = 'Tables to store data from Northwoods Airlines';
    
USE SCHEMA USER_ANBALAGAN.NORTHWOODS_TABLES;

CREATE TABLE IF NOT EXISTS  NORTHWOODS_TABLES.AIRLINE (AR_CODE CHAR(2) NOT NULL , AR_NAME VARCHAR(100) NOT NULL);

CREATE TABLE IF NOT EXISTS  NORTHWOODS_TABLES.AIRPORT (AIRPORT_CODE CHAR(3) NOT NULL, AIRPORT_NAME VARCHAR(100),CITY VARCHAR(50),
                                                        STATE CHAR(2) , COUNTRY CHAR(3), LATITUDE FLOAT , LONGITUDE FLOAT)
    
CREATE OR REPLACE SEQUENCE DT_SEQ start = 1 increment = 1;

CREATE TABLE IF NOT EXISTS  NORTHWOODS_TABLES.DATE_PART_STG (DT_PKEY INT DEFAULT DT_SEQ.NEXTVAL , DT_YEAR INT,DT_MNTH INT,DT_DAY INT, DT_DAY_OF_WEEK INT );

CREATE TABLE IF NOT EXISTS  NORTHWOODS_TABLES.DATE_PART (DT_PKEY INT PRIMARY KEY, DT_YEAR INT,DT_MNTH INT,DT_DAY INT, DT_DAY_OF_WEEK INT );


CREATE TABLE IF NOT EXISTS  NORTHWOODS_TABLES.AIR_TRAFFIC_STG (DT_YEAR INT,DT_MNTH INT,DT_DAY INT,DT_DAY_OF_WEEK INT,
                                                           AR_CODE CHAR(2),FLIGHT_NUMBER INT,TAIL_NUMBER CHAR(10),
                                  ORIGIN_AIRPORT CHAR(3),DESTINATION_AIRPORT CHAR(3),SCHEDULED_DEPARTURE CHAR(4),
                                  DEPARTURE_TIME CHAR(4),DEPARTURE_DELAY INT,TAXI_OUT INT,WHEELS_OFF INT ,SCHEDULED_TIME INT,
                                   ELAPSED_TIME INT,AIR_TIME INT,DISTANCE INT,
                                   WHEELS_ON INT,TAXI_IN INT,SCHEDULED_ARRIVAL INT,ARRIVAL_TIME INT,ARRIVAL_DELAY INT,
                                                           DIVERTED Boolean,CANCELLED Boolean,
                                    CANCELLATION_REASON CHAR(1),AIR_SYSTEM_DELAY INT,SECURITY_DELAY INT,AIRLINE_DELAY INT,
                                   LATE_AIRCRAFT_DELAY INT,WEATHER_DELAY INT);

CREATE TABLE IF NOT EXISTS  NORTHWOODS_TABLES.AIR_TRAFFIC (DT_PKEY INT FOREIGN KEY REFERENCES DATE_PART(DT_PKEY),
                                                           AR_CODE CHAR(2),FLIGHT_NUMBER INT,TAIL_NUMBER CHAR(10),
                                  ORIGIN_AIRPORT CHAR(3),DESTINATION_AIRPORT CHAR(3),SCHEDULED_DEPARTURE CHAR(4),
                                  DEPARTURE_TIME CHAR(4),DEPARTURE_DELAY INT,TAXI_OUT INT,WHEELS_OFF INT ,SCHEDULED_TIME TIME,
                                   ELAPSED_TIME INT,AIR_TIME TIME,DISTANCE INT,
                                   WHEELS_ON INT,TAXI_IN INT,SCHEDULED_ARRIVAL INT,ARRIVAL_TIME TIME,ARRIVAL_DELAY INT,
                                                           DIVERTED Boolean,CANCELLED Boolean,
                                    CANCELLATION_REASON CHAR(1),AIR_SYSTEM_DELAY INT,SECURITY_DELAY INT,AIRLINE_DELAY INT,
                                   LATE_AIRCRAFT_DELAY INT,WEATHER_DELAY INT)
                                   
                                   CLUSER BY (AR_CODE,ORIGIN_AIRPORT,DESTINATION_AIRPORT);


# Following procedure throws error while executing but the DELETE statement successfully runs as a stand-alone statement. I need to look into more.
                                                        
CREATE or REPLACE PROCEDURE POPULATE_DATE_PART()
  RETURNS VARCHAR
  LANGUAGE javascript
  AS
  $$
  var rs = snowflake.execute( { sqlText:
            "
         DELETE FROM NORTHWOODS_TABLES.DATE_PART_STG
             USING 
         
(SELECT DT_PKEY FROM
(SELECT DT_PKEY, RANK() OVER(PARTITION BY DT_YEAR ,DT_MNTH ,DT_DAY , DT_DAY_OF_WEEK ORDER BY DT_PKEY ) AS ROWNO
             FROM NORTHWOODS_TABLES.DATE_PART_STG) T1
 WHERE T1.ROWNo <> 1 ) AS TO_BE_DELETED
 WHERE DATE_PART_STG.DT_PKEY = TO_BE_DELETED.DT_PKEY;"
 
 })
  return 'Executed.';
  $$;

 CALL POPULATE_DATE_PART()



DELETE FROM NORTHWOODS_TABLES.DATE_PART_STG
             USING 
         
(SELECT DT_PKEY FROM
(SELECT DT_PKEY, RANK() OVER(PARTITION BY DT_YEAR ,DT_MNTH ,DT_DAY , DT_DAY_OF_WEEK ORDER BY DT_PKEY ) AS ROWNO
             FROM NORTHWOODS_TABLES.DATE_PART_STG) T1
 WHERE T1.ROWNo <> 1 ) AS TO_BE_DELETED
 WHERE DATE_PART_STG.DT_PKEY = TO_BE_DELETED.DT_PKEY;
             
 DELETE FROM NORTHWOODS_TABLES.DATE_PART_STG T2 WHERE T2.DT_PKEY NOT IN (SELECT T1.DT_PKEY FROM T1 WHERE T1.ROWNO=1);
